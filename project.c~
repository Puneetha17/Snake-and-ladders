#include <GL/glut.h>
#include <stdio.h>
#include <math.h>

void setPixel(int x,int y)
{
glBegin(GL_POINTS);
glVertex2f(x,y);
glEnd();
glFlush();
}

void linebres(int x1,int y1,int x2,int y2)
{
int dx,dy,steps,i,p;
float x,y;
x=x1;
y=y1;
dx=x2-x1;
dy=y2-y1;
if(abs(dx)>abs(dy))
{
p=(2*abs(dy))-abs(dx);
setPixel(x,y);
for(i=0;i<abs(dx)-1;i++)
{
if(p<0)
{
x+=(dx/abs(dx));
p+=(2*abs(dy));
}
else
{
x+=(dx/abs(dx));
y+=(dy/abs(dy));
p+=((2*abs(dy))-(2*abs(dx)));
}
setPixel(x,y);
}
}
else
{
p=(2*abs(dx))-abs(dy);
setPixel(x,y);
for(i=0;i<abs(dy)-1;i++)
{
if(p<0)
{
y+=(dy/abs(dy));
p+=(2*abs(dx));
}
else
{
x+=(dx/abs(dx));
y+=(dy/abs(dy));
p+=((2*abs(dx))-(2*abs(dy)));
}
setPixel(x,y);
}
}
}

void one(int x,int y,int offset)
{
int x1,y1,x2,y2;
x1=x+offset;
y1=y+25;
x2=x+offset;
y2=y1+50;
linebres(x1,y1,x2,y2);
}

void two(int x,int y,int offset)
{
int x1,y1,x2,y2;
x1=x+offset;
x2=x+offset+50;
y1=y+25;
y2=y+25;
linebres(x1,y1,x2,y2);
x1=x2=x+offset;
y1=y+25;
y2=y1+25;
linebres(x1,y1,x2,y2);
x1=x+offset;
x2=x+offset+50;
y1=y+50;
y2=y+50;
linebres(x1,y1,x2,y2);
x1=x+offset;
x2=x+offset+50;
y1=y+75;
y2=y+75;
linebres(x1,y1,x2,y2);
x1=x2=x+offset+50;
y1=y+50;
y2=y1+25;
linebres(x1,y1,x2,y2);
}

void three(int x,int y,int offset)
{
int x1,x2,y1,y2;
x1=x+offset;
x2=x1+50;
y1=y2=y+25;
linebres(x1,y1,x2,y2);
x1=x+offset;
x2=x1+50;
y1=y2=y+50;
linebres(x1,y1,x2,y2);
x1=x+offset;
x2=x1+50;
y1=y2=y+75;
linebres(x1,y1,x2,y2);
x1=x2=x+offset+50;
y1=y+25;
y2=y1+50;
linebres(x1,y1,x2,y2);
}

void four(int x,int y,int offset)
{
int x1,x2,y1,y2;
x1=x+offset+50;
x2=x+offset+50;
y1=y+25;
y2=y1+50;
linebres(x1,y1,x2,y2);
x1=x+offset;
y1=y+50;
x2=x1;
y2=y1+25;
linebres(x1,y1,x2,y2);
x1=offset+x;
y1=y+50;
x2=x1+50;
y2=y1;
linebres(x1,y1,x2,y2);
}

void five(int x,int y,int offset)
{
int x1,x2,y1,y2;
x1=x+offset;
y1=y2=y+25;
x2=x1+50;
linebres(x1,y1,x2,y2);
x1=x+offset;
y1=y2=y+50;
x2=x1+50;
linebres(x1,y1,x2,y2);
x1=x+offset;
y1=y2=y+75;
x2=x1+50;
linebres(x1,y1,x2,y2);
x1=x2=x+offset+50;
y1=y+25;
y2=y+50;
linebres(x1,y1,x2,y2);
x1=x2=x+offset;
y1=y+50;
y2=y+75;
linebres(x1,y1,x2,y2);
}

void six(int x,int y,int offset)
{
int x1,x2,y1,y2;
x1=x+offset;
y1=y2=y+25;
x2=x1+50;
linebres(x1,y1,x2,y2);
x1=x+offset;
y1=y2=y+50;
x2=x1+50;
linebres(x1,y1,x2,y2);
x1=x+offset;
y1=y2=y+75;
x2=x1+50;
linebres(x1,y1,x2,y2);
x1=x2=x+offset+50;
y1=y+25;
y2=y+50;
linebres(x1,y1,x2,y2);
x1=x2=x+offset;
y1=y+25;
y2=y+75;
linebres(x1,y1,x2,y2);
}

void nine(int x,int y,int offset)
{
int x1,x2,y1,y2;
x1=x+offset+50;
x2=x+offset+50;
y1=y+25;
y2=y1+50;
linebres(x1,y1,x2,y2);
x1=x+offset;
y1=y+50;
x2=x1;
y2=y1+25;
linebres(x1,y1,x2,y2);
x1=offset+x;
y1=y+50;
x2=x1+50;
y2=y1;
linebres(x1,y1,x2,y2);
x1=offset+x;
y1=y+25;
x2=x1+50;
y2=y1;
linebres(x1,y1,x2,y2);
x1=offset+x;
y1=y+75;
x2=x1+50;
y2=y1;
linebres(x1,y1,x2,y2);
}

void seven(int x,int y,int offset)
{
int x1,y1,x2,y2;
x1=x+offset+50;
y1=y+25;
x2=x+offset+50;
y2=y1+50;
linebres(x1,y1,x2,y2);
x1=x+offset;
y1=y+75;
x2=x+offset;
y2=y+60;
linebres(x1,y1,x2,y2);
x1=x+offset;
y1=y+75;
x2=x1+50;
y2=y1;
linebres(x1,y1,x2,y2);
}

void eight(int x,int y,int offset)
{
int x1,x2,y1,y2;
x1=x+offset;
y1=y2=y+25;
x2=x1+50;
linebres(x1,y1,x2,y2);
x1=x+offset;
y1=y2=y+50;
x2=x1+50;
linebres(x1,y1,x2,y2);
x1=x+offset;
y1=y2=y+75;
x2=x1+50;
linebres(x1,y1,x2,y2);
x1=x2=x+offset+50;
y1=y+25;
y2=y+75;
linebres(x1,y1,x2,y2);
x1=x2=x+offset;
y1=y+25;
y2=y+75;
linebres(x1,y1,x2,y2);
}

void zero(int x,int y,int offset)
{
int x1,x2,y1,y2;
x1=x+offset;
y1=y2=y+25;
x2=x1+50;
linebres(x1,y1,x2,y2);
x1=x+offset;
y1=y2=y+75;
x2=x1+50;
linebres(x1,y1,x2,y2);
x1=x2=x+offset+50;
y1=y+25;
y2=y+75;
linebres(x1,y1,x2,y2);
x1=x2=x+offset;
y1=y+25;
y2=y+75;
linebres(x1,y1,x2,y2);
}

void num(int x,int y,int flag)
{
if(flag==0)
{

one(x,y,125);
two(x+2*200,y,100);
three(x+2*400,y,100);
four(x+2*600,y,100);
five(x+2*800,y,100);
six(x+2*1000,y,100);
seven(x+2*1200,y,100);
eight(x+2*1400,y,100);
nine(x+2*1600,y,100);
zero(x+2*1800,y,100);
}
else
{
x=x+2*1800;
one(x,y,125);
two(x-2*200,y,100);
three(x-2*400,y,100);
four(x-2*600,y,100);
five(x-2*800,y,100);
six(x-2*1000,y,100);
seven(x-2*1200,y,100);
eight(x-2*1400,y,100);
nine(x-2*1600,y,100);
zero(x-2*1800,y,100);
}
}

void hundred(int x,int y)
{

  one(x,y,125);
two(x-2*200,y,100);
three(x-2*400,y,100);
four(x-2*600,y,100);
five(x-2*800,y,100);
six(x-2*1000,y,100);
seven(x-2*1200,y,100);
eight(x-2*1400,y,100);
nine(x-2*1600,y,100);
x=0;
one(x,y,25);
zero(x,y,50);
zero(x,y,100);
}

void init()
{
glMatrixMode(GL_PROJECTION);
glLoadIdentity();
gluOrtho2D(0,4500,0,4500);
}

void numbers()
{
int i;
/*for(i=0;i<9;i++)
one(0,i*200,150);*/
for(i=1;i<=9;i++)
one(i*2*200,2*200,75);
/*for(i=0;i<9;i++)
two(200,i*200,125);*/
for(i=0;i<9;i++)
two(i*2*200,2*400,25);
for(i=1;i<=9;i++)
three(i*2*200,2*600,25);
for(i=0;i<9;i++)
four(i*2*200,2*800,25);
for(i=1;i<=9;i++)
five(i*2*200,2*1000,25);
for(i=0;i<9;i++)
six(i*2*200,2*1200,25);
for(i=1;i<=9;i++)
seven(i*2*200,2*1400,25);
for(i=0;i<9;i++)
eight(i*2*200,2*1600,25);
for(i=1;i<=9;i++)
nine(i*2*200,2*1800,25);

for(i=0;i<9;i++)
num(0,i*2*200,i%2);


hundred(2*1800,2*1800);


one(2*1800,0,75);
two(0,2*200,25);
three(2*1800,2*400,25);
four(0,2*600,25);
five(2*1800,2*800,25);
six(0,2*1000,25);
seven(2*1800,2*1200,25);
eight(0,2*1400,25);
nine(2*1800,2*1600,25);
}



void display()
{
int i;
glClear(GL_COLOR_BUFFER_BIT);
glColor3f(1,1,1);
for(i=1;i<=10;i++)
{
linebres(i*400,0,i*400,4000);
}
for(i=1;i<=10;i++)
{
linebres(0,i*400,4000,i*400);
}
numbers();
glFlush();
}

int main(int argc,char **argv)
{
glutInit(&argc,argv);
glutInitWindowSize(1200,700);
glutCreateWindow("Snakes n ladders");

init();
glutDisplayFunc(display);
glutMainLoop();
}
